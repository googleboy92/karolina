<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAkQAAAJoAAACqBQAAoQsGAKUTBQCmFgsAsBEHALsTAAC8FQAAvRgAAL4dBwC6IQQAsy4OALkw
        DACvOhkAsTAXALk0FACzMhkAsjwfAKc5IwDCJgEAySIAAM0nAADNLQgA0ikAAMo4DgDZMAAA1TUJANw8
        CQDBOREAvE0fAJ1MPQC0TSsAokMwAK5PNQDeQQkA0UkJAMZPFwDOVxgA4kEJANdgGQDeax8A/msRAP5n
        HQD+ax0A/nQTAP56FAD+cRsA/nwZAMpNIgDPWyMAyF8oANRXJQDWWCUA0l4nANhYJQDWWCkA0F0wANth
        IQDdYS0A12k0AN51PQDfejsA5mstAP5qIQDkdiYA6n0rAP5zIAD+cyoA434zAO5+MwDmfT0A/nYyAP58
        MwD+dzkAnFlMAJtlWwCwa1QAn3lyAMlzQgD+ghwA/pMWAP6TGwD+gyUA/owiAP6LKgD+kCUA/psjAP6U
        LAD+mykA5oU1AO+DMADoiTYA4Ik8AOqNOgD+jTMA/oQ6AP6LPgDtkzwA/pAzAPiRNQD+kTYA/pY1AP6Z
        NgDwlj4A/pQ7AP6aOgD+nTkA/p88AP6gLAD+pTQA/qE+AP6qPAC+h18AoYJ8ALaMcACzinoAxIddAMuP
        XgDQk1gA649BAP6DRQD+jUIA4pFHAPOTQAD+lEMA/ppCAP6VSQD+mEoA/ppNAP6dTQD+jFgA6pJRAO6f
        XwD9nFEA/pNbAP6cXQD9okMA/q5DAP6hSQD+oEwA/qVMAPuoTgD+qU0A/rJKAP6hUgD+pFMA/qJVAP6l
        VgD+qVAA/qxSAP6oVwD+r1QA9adaAP2kXQD+qVoA/qxaAP6pXAD9rF0A/rJUAP60WwD+lWAA1KFvAPCn
        ZQD+pmAA/qxiAP6qbAD+sWEA/bRjAP61ZQD+uGMA/r1hAPu6ZwD+uWUA/r5nAPWybQD1tG0A/rVqAPi7
        aQD+umkA/r1qAP6+bQDsq3kA/qFyAP6sdAD+p3oA/ql4AP67cwD2t30A/L58AP7BZwD+wWgA/sFvAP7F
        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
        D///gB///8A////h////////
</value>
  </data>
</root>